// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

// User model
model User {
  id           Int           @id @unique @default(autoincrement())
  uuid         String        @unique
  username     String        @unique
  email        String        @unique
  password     String
  profileImage String?
  bio          String?
  createdAt    DateTime      @default(now())
  videos       Video[]
  followings   Followerdbs[] @relation("following")
  followers    Followerdbs[] @relation("follower") // Define the relation to Follower model
  Comments Comment[] 
  // Define the relation to Following model
  likedVideos Like[]

  // notifications     Notification[]
}

model Followerdbs {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  followingid Int?
  followerid  Int?
  follower    User?    @relation("follower", fields: [followerid], references: [id])
  following   User?    @relation("following", fields: [followingid], references: [id])
}

model Video {
  id          Int      @id @default(autoincrement())
  url         String?
  description String?
  title       String?
  file        String?
  likescount  Int      @default(0)
  views       Int      @default(0)
  createdAt   DateTime @default(now())
  userId      Int
  likeId      Int?
  user        User     @relation(fields: [userId], references: [id])
  hashtags Hashtag[]
  likes Like[]
  comment Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    Int 
  user    User  @relation(fields: [userId], references: [id])
  videoId   Video[]
  
}

model Hashtag {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  
  videos Video[]
}

model Notification {
  id        Int      @id @default(autoincrement())
  content   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Like {
  id        Int      @id @unique @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  video     Video    @relation(fields: [videoId], references: [id])
  videoId   Int
  createdAt DateTime @default(now())
}
